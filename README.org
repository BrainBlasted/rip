* rip (Rm ImProved)
[[https://crates.io/crates/rm-improved][https://img.shields.io/crates/v/rm-improved.svg]]
[[https://travis-ci.org/nivekuil/rip][https://travis-ci.org/nivekuil/rip.svg?branch=master]]

=rip= is a command-line deletion tool focused on safety, ergonomics, and performance.  It does /not/ implement the xdg-trash spec.

Deleted files get sent to the graveyard (=/tmp/.graveyard= by default) under their absolute path, giving you a chance to recover them.

No data is overwritten.  If files that share the same path are deleted, they will be renamed as numbered backups.

If you want to put the graveyard somewhere else (like =~/.local/share/Trash=), you have two options, in order of precedence:
1. Alias =rip= to =rip --graveyard ~/.local/share/Trash=
2. Set the environment variable =$GRAVEYARD= to =~/.local/share/Trash=
This can be a good idea because if the graveyard is mounted on an in-memory filesystem, (as /tmp is in Arch Linux), deleting large files can quickly fill up your RAM.  It's also much slower to move files across filesystems, although the delay should be minimal with an SSD.

A deletion log is kept in the =.record=, found in the top level of the graveyard.

** Installation
Get a binary [[https://github.com/nivekuil/rip/releases][release]] or run =cargo install rm-improved= with a nightly compiler.

** Usage
#+BEGIN_EXAMPLE
USAGE:
    rip [FLAGS] [OPTIONS] [TARGET]...

FLAGS:
    -d, --decompose    Permanently deletes (unlink) the entire graveyard
    -h, --help         Prints help information
    -i, --inspect      Prints some info about TARGET before prompting for action
    -s, --seance       Prints files that were sent under the current directory
    -V, --version      Prints version information

OPTIONS:
        --graveyard <graveyard>    Directory where deleted files go to rest
    -r, --resurrect <target>       Undo the last removal by the current user, or specify some file(s) in the graveyard.  Combine with -s to restore everything printed by -s.

ARGS:
    <TARGET>...    File or directory to remove
#+END_EXAMPLE
Basic usage - same as rm
#+BEGIN_EXAMPLE
$ rip file1 hamilton/ dir1/
#+END_EXAMPLE
Print files that were deleted from under the current directory
#+BEGIN_EXAMPLE
$ rip -s
/tmp/.graveyard/home/jack/file1
/tmp/.graveyard/home/jack/dir1
/tmp/.graveyard/home/jack/hamilton
#+END_EXAMPLE
Restore the last deleted file
#+BEGIN_EXAMPLE
$ rip -r
Returned /tmp/.graveyard/home/jack/dir1 to /home/jack/dir1
#+END_EXAMPLE
Resolve name conflicts
#+BEGIN_EXAMPLE
$ touch file1
$ rip file1
$ rip -s
/tmp/.graveyard/home/jack/file1
/tmp/.graveyard/home/jack/hamilton
/tmp/.graveyard/home/jack/file1.1
#+END_EXAMPLE
-r also takes a file sent from current dir, or the absolute path of a file in the graveyard
#+BEGIN_EXAMPLE
$ rip -r /tmp/.graveyard/home/jack/file1.1
Returned /tmp/.graveyard/home/jack/file1.1 to /home/jack/file1
#+END_EXAMPLE
Combine -r and -s to restore everything printed by -s
#+BEGIN_EXAMPLE
$ rip -sr
Returned /tmp/.graveyard/home/jack/hamilto to /home/jack/hamilton
Returned /tmp/.graveyard/home/jack/file1 to /home/jack/file1.1
#+END_EXAMPLE
*** Notes
- In general, a deletion followed by a =--resurrect= should be idempotent.
- You probably shouldn't alias =rm= to =rip=.  =rm -r= is two characters longer, anyway.
